# Define TFTP rules for both IPv4 and IPv6
nft add set inet filter tftp_clients_v4 '{ type ipv4_addr; flags timeout; timeout 5m; }'
nft add set inet filter tftp_clients_v6 '{ type ipv6_addr; flags timeout; timeout 5m; }'

# Track outgoing TFTP requests and allow responses (IPv4 and IPv6)
nft add rule inet filter OUTPUT ip daddr 192.168.0.0/16 udp dport 69 add @tftp_clients_v4 { ip saddr }
nft add rule inet filter OUTPUT ip daddr 172.16.0.0/12 udp dport 69 add @tftp_clients_v4 { ip saddr }
nft add rule inet filter OUTPUT ip daddr 10.0.0.0/8 udp dport 69 add @tftp_clients_v4 { ip saddr }
nft add rule inet filter OUTPUT ip6 daddr fc00::/7 udp dport 69 add @tftp_clients_v6 { ip6 saddr }

# Allow incoming TFTP responses to tracked clients (IPv4 and IPv6)
nft add rule inet filter INPUT ip saddr 192.168.0.0/16 udp sport 69 udp dport 1024-65535 ip saddr @tftp_clients_v4 accept
nft add rule inet filter INPUT ip saddr 172.16.0.0/12 udp sport 69 udp dport 1024-65535 ip saddr @tftp_clients_v4 accept
nft add rule inet filter INPUT ip saddr 10.0.0.0/8 udp sport 69 udp dport 1024-65535 ip saddr @tftp_clients_v4 accept
nft add rule inet filter INPUT ip6 saddr fc00::/7 udp sport 69 udp dport 1024-65535 ip6 saddr @tftp_clients_v6 accept
