#!/bin/sh

# Load common environment variables and functions
. `dirname $0`/common

# Parse the krb5.conf to find the realm
REALM=$(awk '/^ *default_realm/{print $NF}' /etc/krb5.conf)

# Convert REALM to lowercase for domain name use
DOMAIN=$(echo $REALM | tr '[:upper:]' '[:lower:]')

# Start writing the base configuration
cat << EOF > /etc/sssd/sssd.conf
[sssd]
domains = $DOMAIN
services = nss, pam, ssh, sudo

[domain/$DOMAIN]
default_shell = /bin/sh
krb5_store_password_if_offline = True
cache_credentials = True
krb5_realm = $REALM
realmd_tags = manages-system joined-with-adcli
id_provider = ad
fallback_homedir = /home/%u
ad_domain = $DOMAIN
ldap_id_mapping = True
case_sensitive = false
EOF

# Check for defined ALLOWED_GROUPS or ALLOWED_USERS
if [ -n "$SSSD_ALLOWED_GROUPS" ] || [ -n "$SSSD_ALLOWED_USERS" ]; then
    # Begin access control configuration
    echo "access_provider = simple" >> /etc/sssd/sssd.conf

    # If groups are defined, add them to the configuration
    if [ -n "$SSSD_ALLOWED_GROUPS" ]; then
        echo "simple_allow_groups = $SSSD_ALLOWED_GROUPS" >> /etc/sssd/sssd.conf
    fi

    # If users are defined, add them to the configuration
    if [ -n "$SSSD_ALLOWED_USERS" ]; then
        echo "simple_allow_users = $SSSD_ALLOWED_USERS" >> /etc/sssd/sssd.conf
    fi
else
    # Default to Active Directory as the access provider if no specific restrictions are defined
    echo "access_provider = ad" >> /etc/sssd/sssd.conf
fi

# Optional fully qualified names based on another condition
if is_enabled $SSSD_FQDN; then
    echo "use_fully_qualified_names = True" >> /etc/sssd/sssd.conf
fi

chmod 600 /etc/sssd/sssd.conf

if [ -n "$SSSD_USER_GROUP" ]; then
	systemctl start sssd
	sss_override group-add "$SSSD_USER_GROUP" -g 100
	systemctl stop sssd
	while pidof sssd; do
		sleep .1
	done
	while [ -e /var/lib/sss/pipes/private/sbus-master ]; do
		rm -f /var/lib/sss/pipes/private/sbus-master
	done
fi
systemctl start sssd
