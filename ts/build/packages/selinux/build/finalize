#selinux 90
if [ "$1" == "1" ] && [ -x "/usr/lib/systemd/systemd-update-helper" ]; then 
    # Initial installation 
    /usr/lib/systemd/systemd-update-helper install-system-units selinux-check-proper-disable.service || : 
fi 

if [ ! -s /etc/selinux/config ]; then
#
#     New install so we will default to targeted policy
#
echo "
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
# See also:
# https://docs.fedoraproject.org/en-US/quick-docs/getting-started-with-selinux/#getting-started-with-selinux-selinux-states-and-modes
#
# NOTE: In earlier Fedora kernel builds, SELINUX=disabled would also
# fully disable SELinux during boot. If you need a system with SELinux
# fully disabled instead of SELinux running with no policy loaded, you
# need to pass selinux=0 to the kernel command line. You can use grubby
# to persistently set the bootloader to boot with selinux=0:
#
#    grubby --update-kernel ALL --args selinux=0
#
# To revert back to SELinux enabled:
#
#    grubby --update-kernel ALL --remove-args selinux
#
SELINUX=permissive
#SELINUX=enforcing
# SELINUXTYPE= can take one of these three values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted

" > /etc/selinux/config

#     ln -sf ../selinux/config /etc/sysconfig/selinux
     /usr/sbin/restorecon /etc/selinux/config 2> /dev/null || :
else
     . /etc/selinux/config
fi

if [ "$1" == "1" ] && [ -x "/usr/lib/systemd/systemd-update-helper" ]; then 
    # Initial installation 
    /usr/lib/systemd/systemd-update-helper install-system-units selinux-autorelabel-mark.service || : 
fi

if [ "$1" != "1" ] && [ -s /etc/selinux/config ]; then 
     for MOD_NAME in ganesha ipa_custodia kdbus; do 
        if [ -d /var/lib/selinux/targeted/active/modules/100/$MOD_NAME ]; then 
           /usr/sbin/semodule -n -d $MOD_NAME 2> /dev/null; 
        fi; 
     done; 
     . /etc/selinux/config; 
     FILE_CONTEXT=/etc/selinux/targeted/contexts/files/file_contexts; 
     if [ "${SELINUXTYPE}" = targeted -a -f ${FILE_CONTEXT} ]; then 
        [ -f ${FILE_CONTEXT}.pre ] || cp -f ${FILE_CONTEXT} ${FILE_CONTEXT}.pre; 
     fi; 
     touch /etc/selinux/targeted/.rebuild; 
     if [ -e /etc/selinux/targeted/.policy.sha512 ]; then 
        POLICY_FILE=`ls /etc/selinux/targeted/policy/policy.* | sort | head -1` 
        sha512=`sha512sum $POLICY_FILE | cut -d ' ' -f 1`; 
        checksha512=`cat /etc/selinux/targeted/.policy.sha512`; 
        if [ "$sha512" == "$checksha512" ] ; then 
                rm /etc/selinux/targeted/.rebuild; 
        fi; 
   fi; 
fi;

if [ -f /etc/selinux/.config_backup ]; then 
    . /etc/selinux/.config_backup; 
else 
    BACKUP_SELINUXTYPE=targeted; 
fi; 
if [ -s /etc/selinux/config ]; then 
    . /etc/selinux/config; 
    if ls /etc/selinux/$BACKUP_SELINUXTYPE/policy/policy.* &>/dev/null; then 
        if [ "$BACKUP_SELINUXTYPE" != "$SELINUXTYPE" ]; then 
            sed -i 's/^SELINUXTYPE=.*/SELINUXTYPE='"$BACKUP_SELINUXTYPE"'/g' /etc/selinux/config; 
        fi; 
    elif [ "targeted" = "targeted" ]; then 
        if [ "targeted" != "$SELINUXTYPE" ]; then 
            sed -i 's/^SELINUXTYPE=.*/SELINUXTYPE=targeted/g' /etc/selinux/config; 
        fi; 
    elif ! ls  /etc/selinux/$SELINUXTYPE/policy/policy.* &>/dev/null; then 
        if [ "targeted" != "$SELINUXTYPE" ]; then 
            sed -i 's/^SELINUXTYPE=.*/SELINUXTYPE=targeted/g' /etc/selinux/config; 
        fi; 
    fi; 
fi;

#touch .autorelabel
#restorecon -Rv /
